<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>HolidayRequest</web>
  <name>Summary</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>HolidayRequest.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1401184625000</creationDate>
  <date>1401285645000</date>
  <contentUpdateDate>1401285645000</contentUpdateDate>
  <version>1.1</version>
  <title>$msg.get('contrib.hr.summary.title')</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
$xwiki.ssx.use("HolidayRequest.SkinExtension")
$xcontext.put("status_accept", $msg.get('HolidayRequest.HolidayRequestClass_status_value1'))
{{/velocity}}

{{groovy}}
def accept = xcontext.get("status_accept")
def Request = xwiki.getSpaceDocsName("HolidayRequest")
def mapUsersDays = [:]
def mapUsersStart = [:]
def obj
def document
def numberDays
def employee
def startDate
def n = 0
Request.eachWithIndex()
{ doc, i -&gt;
  document = xwiki.getDocument(doc)
  obj = document.getObject('HolidayRequest.HolidayRequestClass')
  if(obj!=null &amp;&amp; obj.get('status')==accept)
  {
    numberDays = obj.get('numberDays')
    if(numberDays != null &amp;&amp; numberDays.size() &gt; 0)
    {
       numberDays = Float.parseFloat(numberDays)
    }
    else
    {
       numberDays = 0
    }
    employee = obj.get('employee')
    if(mapUsersDays.containsKey(employee))
    {
       mapUsersDays[employee] = mapUsersDays[employee] + numberDays
    }
    else
    {
      mapUsersDays[employee] = numberDays
      if(xwiki.getDocument(document.getValue('employee')).getObject("XWiki.XWikiUsers")) //If the employee still exists
      {
        if(xwiki.getUserName(document.getValue('employee'), '$startDate', false)!='$startDate')  //If we have a date specified
        {
           mapUsersStart[employee] = xwiki.getUserName(document.getValue('employee'), '$startDate', false)
        }
      }
      n=n+1
    }
  }
};
if(n==0)
{
  def no_requests = services.localization.render('contrib.hr.summary.no.accepted.requests')
  println "(% class ='noitems' %)"
  println no_requests
}

def employees = [n]
def days = [n]
def start = [n]
def i=0

mapUsersDays.each() { 
key, value -&gt; employees[i]=key; 
              days[i]=value; 
              if(mapUsersStart[key]!=null) {
                 start[i]=new Date().parse("yyyy-M-d H:m:s", mapUsersStart[key]);
              } 
              else{
                 start[i]=""
              }
              i=i+1
};

xcontext.put('n', n-1)
xcontext.put('days',days)
xcontext.put('employees', employees)
xcontext.put('startDates', start)
{{/groovy}}

{{velocity}}
#set($end = $xcontext.get('n'))

#if($end&gt;=0)
  #set($employees = $xcontext.get('employees'))
  #set($days = $xcontext.get('days'))
  #set($startDates = $xcontext.get('startDates'))
  #set($start = 0)
  #set($range = [$start..$end])
  #set($now = $datetool.getDate())

  {{html wiki="true"}}

  &lt;table id="summary"&gt;
    &lt;tr class="head"&gt;
      &lt;td&gt;**$msg.get('contrib.hr.summary.table.employee')**&lt;/td&gt;
      &lt;td&gt;**$msg.get('contrib.hr.summary.table.days')**^^1^^&lt;/td&gt;
      &lt;td&gt;**$msg.get('contrib.hr.summary.table.daysLeft')**^^2^^&lt;/td&gt;
    &lt;/tr&gt;  
  #foreach($i in $range)
    #set($employee = $employees.get($i))
    #set($daysTaken = $days.get($i))
    #if($startDates.get($i)!="")
      #set($startDate = $startDates.get($i))
      #set($span = $datetool.whenIs($startDate).days)
      #set($left = $mathtool.div($mathtool.mul($span, -25), 365))
      #set($left = $mathtool.sub($left, $daysTaken))
      #set($left = $mathtool.max(0,$mathtool.floor($left)))
    #else
      #set($left = '-')
    #end
    &lt;tr class="entry"&gt;&lt;td&gt;$employee&lt;/td&gt;&lt;td&gt;$!daysTaken&lt;/td&gt;&lt;td&gt;$left&lt;/td&gt;&lt;/tr&gt;
  #end
&lt;/table&gt;

{{/html}}

1 : $msg.get('contrib.hr.summary.daysTaken.explanation')
2 : $msg.get('contrib.hr.summary.daysLeft.explanation') 
#end 
{{/velocity}}</content>
</xwikidoc>
